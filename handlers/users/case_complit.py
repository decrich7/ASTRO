# -*- coding: utf-8 -*-
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from states.state import AddCase

from keyboards.default.button import risk_prifile
from loader import dp
from states.state import ChoiseRisk


@dp.message_handler(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å üß≥', state=None)
async def bot_start(message: types.Message):
    await message.answer('–°—É–ø–µ—Ä! –í—ã —Å—Ä–∞–∑—É –∂–µ –º–æ–∂–µ—Ç–µ –æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞üòä\n'
                         '–°–≤–æ–¥–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n'
                         '<strong>broker   name   tickers   count   date</strong>\n\n'
                         '<em>–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏   Apple Inc   AAPL   12   2020-12-05</em>\n\n'
                         '<em>–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏   General Electric Company   GE   123   2020-11-13</em>\n\n'
                         '<em>–ê–ª—å—Ñ–∞-–î–∏—Ä–µ–∫—Ç   Bank Of America Corp   BAC   23   2020-12-10</em>\n\n'
                         '<em>–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏   Advanced Micro Devices Inc   AMD   42   2020-11-17</em>\n\n'
                         '<em>–ê–ª—å—Ñ–∞-–î–∏—Ä–µ–∫—Ç   Plug Power Inc   PLUG   155   2020-12-20</em>\n\n'
                         '<em>–ê–ª—å—Ñ–∞-–î–∏—Ä–µ–∫—Ç   Ford Motor Company   F   42   2020-12-22</em>\n\n')
    await message.answer('–¢–µ–ø–µ—Ä—å –≤–∞–º —Å–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Å–≤–æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è üíπ\n'
                         '–í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã —Ä–∏—Å–∫-–ø—Ä–æ—Ñ–∏–ª–µ–π üîé\n'
                         '<strong>–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π</strong> - <em>–ì–¥–µ —Ü–µ–ª—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–ø–∏—Ç–∞–ª –∏ –∑–∞—â–∏—Ç–∏—Ç—å –µ–≥–æ –æ—Ç –∏–Ω—Ñ–ª—è—Ü–∏–∏</em>\n\n'
                         '<strong>–£–º–µ—Ä–µ–Ω–Ω—ã–π</strong> - <em>–ò–Ω–≤–µ—Å—Ç–æ—Ä –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∏—Å–∫ —Ä–∞–¥–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏</em>\n\n'
                         '<strong>–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π</strong> - <em>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–∞–∫–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å</em>\n\n'
                         '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π ü§ì', reply_markup=risk_prifile)
    await ChoiseRisk.risk.set()
    # await state.finish()


@dp.message_handler(text='–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –ø–æ—Ç—Ä—Ñ–µ–ª—å üíº')
async def bot_start(message: types.Message):
    await message.answer('–û—Ç–ª–∏—á–Ω–æ!üòÅ\n'
                         '–í —Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏\n'
                         '<strong>name  tickers   count   date</strong>\n'
                         'name - –ù–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ü–∏–∏\n'
                         'tickers - –£–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫—Ü–∏–∏\n'
                         'count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π\n'
                         'date - –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏\n')
    # await AddCase.case.set()
